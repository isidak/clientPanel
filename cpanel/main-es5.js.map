{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/add-client/add-client.component.ts","webpack:///src/app/components/add-client/add-client.component.html","webpack:///src/app/components/client-details/client-details.component.ts","webpack:///src/app/components/client-details/client-details.component.html","webpack:///src/app/components/clients/clients.component.ts","webpack:///src/app/components/clients/clients.component.html","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/edit-client/edit-client.component.ts","webpack:///src/app/components/edit-client/edit-client.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/not-found/not-found.component.ts","webpack:///src/app/components/not-found/not-found.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/components/settings/settings.component.ts","webpack:///src/app/components/settings/settings.component.html","webpack:///src/app/components/sidebar/sidebar.component.ts","webpack:///src/app/components/sidebar/sidebar.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/guards/register.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/client.service.ts","webpack:///src/app/services/settings.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","providers","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","bootstrap","AddClientComponent","fb","flashMessage","clientService","router","settingsService","addClientForm","group","firstName","required","minLength","lastName","email","phone","balance","value","disabled","disableBalanceOnAdd","subscription","settings","subscribe","res","get","disable","valid","client","newClient","show","cssClass","timeout","navigate","unsubscribe","onSubmit","ClientDetailsComponent","route","hasBalance","showBalanceUpdateInput","snapshot","params","getClient","confirm","deleteClient","updateClient","onDelete","ClientsComponent","getClients","clients","getTotalOwed","totalOwed","reduce","total","DashboardComponent","EditClientComponent","disableBalanceOnEdit","patchValue","LoginComponent","authService","flashMessages","getAuth","auth","login","password","err","message","NavbarComponent","isLoggedIn","loggedInUser","showRegister","allowRegistration","logout","NotFoundComponent","RegisterComponent","register","SettingsComponent","next","changeSettings","SidebarComponent","AuthGuard","afAuth","authState","pipe","RegisterGuard","AuthService","reject","signInWithEmailAndPassword","userData","createUserWithEmailAndPassword","signOut","providedIn","ClientService","afs","clientsCollection","collection","ref","orderBy","snapshotChanges","changes","map","action","data","payload","doc","clientDoc","exists","add","update","SettingsService","localStorage","getItem","JSON","parse","setItem","stringify","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","bootstrapModule","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {DashboardComponent} from './components/dashboard/dashboard.component';\nimport {LoginComponent} from './components/login/login.component';\nimport {ClientsComponent} from './components/clients/clients.component';\nimport {AddClientComponent} from './components/add-client/add-client.component';\nimport {ClientDetailsComponent} from './components/client-details/client-details.component';\nimport {EditClientComponent} from './components/edit-client/edit-client.component';\nimport {NotFoundComponent} from './components/not-found/not-found.component';\nimport {RegisterComponent} from './components/register/register.component';\nimport {SettingsComponent} from './components/settings/settings.component';\nimport {SidebarComponent} from './components/sidebar/sidebar.component';\nimport {AuthGuard} from './guards/auth.guard';\nimport {RegisterGuard} from './guards/register.guard';\n\n\n\nconst routes: Routes = [\n  {path: '', component: DashboardComponent, canActivate: [AuthGuard]},\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent, canActivate: [RegisterGuard]},\n  {path: 'client/add', component: AddClientComponent, canActivate: [AuthGuard]},\n  {path: 'client/edit/:id', component: EditClientComponent, canActivate: [AuthGuard]},\n  {path: 'client/:id', component: ClientDetailsComponent, canActivate: [AuthGuard]},\n  {path: 'settings', component: SettingsComponent, canActivate: [AuthGuard]},\n  {path: '**', component: NotFoundComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard, RegisterGuard]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'cpanel';\n}\n","<app-navbar></app-navbar>\n\n<div class=\"container\">\n  <flash-messages></flash-messages>\n<router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {environment} from '../environments/environment';\nimport {AngularFireModule} from 'angularfire2';\nimport {AngularFirestoreModule} from 'angularfire2/firestore';\nimport {AngularFireAuthModule} from 'angularfire2/auth';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ClientsComponent } from './components/clients/clients.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { AddClientComponent } from './components/add-client/add-client.component';\nimport { EditClientComponent } from './components/edit-client/edit-client.component';\nimport { ClientDetailsComponent } from './components/client-details/client-details.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    DashboardComponent,\n    ClientsComponent,\n    SidebarComponent,\n    AddClientComponent,\n    EditClientComponent,\n    ClientDetailsComponent,\n    LoginComponent,\n    RegisterComponent,\n    SettingsComponent,\n    NotFoundComponent\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        AngularFireModule.initializeApp(environment.firebase, 'cpanel'),\n        AngularFireAuthModule,\n        AngularFirestoreModule,\n        ReactiveFormsModule,\n        FlashMessagesModule.forRoot(),\n        FormsModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {Validators} from '@angular/forms';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {ClientService} from '../../services/client.service';\nimport {Router} from '@angular/router';\nimport {SettingsService} from '../../services/settings.service';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-add-client',\n  templateUrl: './add-client.component.html',\n  styleUrls: ['./add-client.component.css']\n})\nexport class AddClientComponent implements OnInit, OnDestroy {\n  disableBalanceOnAdd: boolean;\n  addClientForm = this.fb.group({\n    firstName: ['', [Validators.required, Validators.minLength(2)]],\n    lastName: ['', [Validators.required, Validators.minLength(2)]],\n    email: ['', [Validators.required, Validators.email]],\n    phone: ['', [Validators.required, Validators.minLength(10)]],\n    balance: [{value: '0', disabled: this.disableBalanceOnAdd}]\n  });\n\n  subscription = new Subscription();\n\n\n  constructor(private fb: FormBuilder,\n              private flashMessage: FlashMessagesService,\n              private clientService: ClientService,\n              private router: Router,\n              private settingsService: SettingsService\n              ) { }\n\n  ngOnInit(): void {\n    this.subscription = this.settingsService.settings.subscribe(res => this.disableBalanceOnAdd = res.disableBalanceOnAdd);\n\n    if (this.disableBalanceOnAdd){\n      this.addClientForm.get('balance').disable();\n    }\n  }\n\n  get firstName(){\n    return this.addClientForm.get('firstName');\n  }\n\n  get lastName(){\n    return this.addClientForm.get('lastName');\n  }\n\n  get email(){\n    return this.addClientForm.get('email');\n  }\n\n  get phone(){\n    return this.addClientForm.get('phone');\n  }\n\n\n  onSubmit(){\n    if (this.addClientForm.valid){\n      if (this.disableBalanceOnAdd){\n        this.addClientForm.value.balance = 0;\n      }\n      const client = this.addClientForm.value;\n     // Add new client\n      this.clientService.newClient(client);\n    //  Show message\n      this.flashMessage.show('New client added', {\n        cssClass: 'alert-success', timeout: 2000\n      });\n    //  Redirect to dashboard\n      this.router.navigate(['/']);\n    } else {\n    //  Show error\n      this.flashMessage.show('Please fill out the form correctly', {\n        cssClass: 'alert-danger', timeout: 2000\n      });\n      // const errmessage = document.createElement('div');\n      // errmessage.innerText = 'Please fill out the form correctly';\n      // errmessage.className = 'alert alert-danger';\n      // document.forms[0].append(errmessage);\n      // setTimeout(()=>{\n      //   errmessage.remove();\n      // }, 2000);\n\n\n    }\n  }\n\n  ngOnDestroy(){\n    this.subscription.unsubscribe();\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-md-6\">\n    <a routerLink=\"/\" class=\"btn btn-link\">\n      <i class=\"fa fa-arrow-circle-o-left\"></i> Back to Dashboard\n    </a>\n  </div>\n  <div class=\"col-md-6\">\n\n  </div>\n</div>\n\n<div class=\"card\">\n  <div class=\"card-header\">\n    Add Client\n  </div>\n  <div class=\"card-body\">\n    <form [formGroup]=\"addClientForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n      <label>\n        First Name:\n      </label>\n        <input class=\"form-control\" [ngClass]=\"{'is-invalid': firstName.invalid && (firstName.touched || firstName.dirty) }\" type=\"text\" formControlName=\"firstName\" required>\n        <div *ngIf=\"firstName.invalid && (firstName.touched || firstName.dirty)\" class=\"invalid-feedback\">\n        <div *ngIf=\"firstName.errors.required\"> First Name is required</div>\n        <div *ngIf=\"firstName.errors.minlength\"> First Name should be at least 2 characters</div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n      <label>\n        Last Name:\n      </label>\n        <input class=\"form-control\" [ngClass]=\"{'is-invalid': lastName.invalid && (lastName.touched || lastName.dirty) }\" type=\"text\" formControlName=\"lastName\" required>\n        <div *ngIf=\"lastName.invalid && (lastName.touched || lastName.dirty)\" class=\"invalid-feedback\">\n          <div *ngIf=\"lastName.errors.required\"> Last Name is required</div>\n          <div *ngIf=\"lastName.errors.minlength\"> Last Name should be at least 2 characters</div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n      <label>\n        Email:\n      </label>\n        <input class=\"form-control\" [ngClass]=\"{'is-invalid': email.invalid && (email.touched || email.dirty) }\" type=\"text\" formControlName=\"email\" required>\n        <div *ngIf=\"email.invalid && (email.touched || email.dirty)\" class=\"invalid-feedback\">\n          <div *ngIf=\"email.errors.required\"> Email is required</div>\n          <div *ngIf=\"email.errors.email\"> Please enter a valid email </div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n      <label>\n        Phone:\n      </label>\n        <input class=\"form-control\" [ngClass]=\"{'is-invalid': phone.invalid && (phone.touched || phone.dirty)}\" type=\"text\" formControlName=\"phone\" required>\n        <div *ngIf=\"phone.invalid && (phone.touched || phone.dirty)\" class=\"invalid-feedback\">\n          <div *ngIf=\"phone.errors.required\"> Phone is required</div>\n          <div *ngIf=\"phone.errors.minlength\"> Please enter a valid phone </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n      <label>\n        Balance:\n      </label>\n        <input class=\"form-control\" type=\"number\" formControlName=\"balance\" >\n      </div>\n    <input type=\"submit\" class=\"btn btn-primary btn-block\">\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ClientService} from '../../services/client.service';\nimport {Client} from '../../models/Client';\nimport {ActivatedRoute, Router, Params} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {FormsModule} from '@angular/forms';\n\n@Component({\n  selector: 'app-client-details',\n  templateUrl: './client-details.component.html',\n  styleUrls: ['./client-details.component.css']\n})\nexport class ClientDetailsComponent implements OnInit {\n  id: string;\n  client: Client;\n  hasBalance: boolean = true;\n  showBalanceUpdateInput: boolean = false;\n\n  constructor(private clientService: ClientService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private flashMessage: FlashMessagesService) { }\n\n  ngOnInit(): void {\n  this.id = this.route.snapshot.params.id;\n  this.clientService.getClient(this.id).subscribe(client => {\n    if(client != null){\n      if(client.balance > 0){\n        this.hasBalance = true;\n      }\n    }\n    this.client = client;\n  });\n  }\n\n  onDelete(){\n    if(confirm('Are you sure?')){\n      this.clientService.deleteClient(this.client);\n      this.router.navigate(['/']);\n      this.flashMessage.show('Client removed', {\n        cssClass: 'alert-success', timeout: 4000\n      });\n    }\n  }\n\n  updateBalance(){\n  this.clientService.updateClient(this.client);\n  this.flashMessage.show('Balance updated', {\n    cssClass: 'alert-success', timeout: 4000\n  });\n  this.showBalanceUpdateInput = !this.showBalanceUpdateInput;\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-md-6\">\n    <a routerLink=\"/\" class=\"btn btn-link\">\n      <i class=\"fa fa-arrow-circle-o-left\"></i> Back to Dashboard\n    </a>\n  </div>\n  <div class=\"col-md-6\">\n    <div class=\"btn-group pull-right\">\n      <a routerLink=\"/client/edit/{{id}}\" class=\"btn btn-dark\">\n        Edit\n      </a>\n      <button (click) = \"onDelete()\" class=\"btn btn-danger\">Delete</button>\n    </div>\n  </div>\n</div>\n<hr>\n\n<div *ngIf=\"client\" class=\"card\">\n  <h3 class=\"card-header\">{{ client.firstName }} {{ client.lastName }}</h3>\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-6 col-sm-6\">\n        <h4>Client ID: {{ client.id }}</h4>\n      </div>\n      <div class=\"col-md-6 col-sm-6\">\n        <h3 class=\"pull-right\">\n          Balance\n          <span\n          [class.text-danger]=\"hasBalance\"\n          [class.text-success]=\"!hasBalance\">\n            {{client.balance | currency:\"USD\":\"symbol\"}}\n          </span>\n          <a (click)=\"showBalanceUpdateInput = !showBalanceUpdateInput\">\n          <i class=\"fa fa-pencil\"></i></a>\n        </h3>\n        <div class=\"clearfix\">\n          <form *ngIf=\"showBalanceUpdateInput\" (submit)=\"updateBalance()\">\n            <div class=\"input-group\">\n              <input class=\"form-control\" name=\"balance\" type=\"text\" [(ngModel)]=\"client.balance\">\n              <span class=\"input-group-btn\">\n                <button type=\"submit\" class=\"btn btn-primary\">Update</button>\n              </span>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n\n    <hr>\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\">Contact Email: {{ client.email }}</li>\n      <li class=\"list-group-item\">Contact Phone: {{ client.phone }}</li>\n    </ul>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ClientService} from '../../services/client.service';\nimport { Client } from 'src/app/models/Client';\n\n@Component({\n  selector: 'app-clients',\n  templateUrl: './clients.component.html',\n  styleUrls: ['./clients.component.css']\n})\nexport class ClientsComponent implements OnInit {\n  clients: Client[];\n  totalOwed: number;\n\n  constructor(private clientService: ClientService) { }\n\n  ngOnInit(): void {\n    this.clientService.getClients().subscribe(clients => {\n    this.clients = clients;\n    this.getTotalOwed()});\n  }\n\n  getTotalOwed(){\n    this.totalOwed = this.clients.reduce((total, client) => {\n      return total + +client.balance;\n    }, 0);\n\n  }\n\n\n}\n","<div class=\"row\">\n  <div class=\"col-md-6\">\n    <h2> <i class=\"fa fa-users\"></i>Clients</h2>\n  </div>\n  <div class=\"col-md-6\">\n    <h5 class=\"text-right text-secondary\">Total Owed: {{totalOwed | currency:\"USD\":\"symbol\"}}</h5>\n  </div>\n</div>\n\n<table class=\"table table-striped\" *ngIf=\"clients?.length > 0;else noClients\">\n  <thead class=\"thead-inverse\">\n  <tr>\n    <th>Name</th>\n    <th>Email</th>\n    <th>Balance</th>\n  </tr>\n  </thead>\n  <tbody>\n  <tr *ngFor=\"let client of clients\">\n    <td>{{client.firstName}} {{client.lastName}}</td>\n    <td>{{client.email}}</td>\n    <td>{{client.balance | currency:\"USD\":\"symbol\"}}</td>\n    <td><a routerLink=\"client/{{client.id}}\" class=\"btn btn-secondary btn-sm\"><i class=\"fa fa-arrow-circle-o-right\"></i>Details</a></td>\n  </tr>\n  </tbody>\n</table>\n\n<ng-template #noClients>\n  <hr>\n  <h5>There are no clients in the system</h5>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"row\">\n  <div class=\"col-md-10\">\n    <app-clients></app-clients>\n  </div>\n  <div class=\"col-md-2\">\n  <app-sidebar></app-sidebar>\n  </div>\n</div>\n\n\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ClientService} from '../../services/client.service';\nimport {ActivatedRoute, Router, Params} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {SettingsService} from '../../services/settings.service';\nimport {Subscription} from 'rxjs';\n\n\n@Component({\n  selector: 'app-edit-client',\n  templateUrl: './edit-client.component.html',\n  styleUrls: ['./edit-client.component.css']\n})\nexport class EditClientComponent implements OnInit, OnDestroy {\n  id: string;\n  disableBalanceOnEdit: boolean;\n  addClientForm = this.fb.group({\n    firstName: ['', [Validators.required, Validators.minLength(2)]],\n    lastName: ['', [Validators.required, Validators.minLength(2)]],\n    email: ['', [Validators.required, Validators.email]],\n    phone: ['', [Validators.required, Validators.minLength(10)]],\n    balance: [{value: '0', disabled: this.disableBalanceOnEdit}],\n    id: ['']\n  });\n  subscription = new Subscription();\n\n\n\n  constructor(private clientService: ClientService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private flashMessage: FlashMessagesService,\n              private fb: FormBuilder,\n              private settingsService: SettingsService) { }\n\n  ngOnInit(): void {\n    this.subscription = this.settingsService.settings.subscribe(res => this.disableBalanceOnEdit = res.disableBalanceOnEdit);\n    this.id = this.route.snapshot.params.id;\n    this.clientService.getClient(this.id).subscribe(client => {\n      this.addClientForm.patchValue({\n        firstName: client.firstName,\n        lastName: client.lastName,\n        email: client.email,\n        phone: client.phone,\n        balance: client.balance\n      });\n      if(this.disableBalanceOnEdit){\n      this.addClientForm.get('balance').disable(); }\n    });\n\n\n  }\n\n  get firstName(){\n    return this.addClientForm.get('firstName');\n  }\n\n  get lastName(){\n    return this.addClientForm.get('lastName');\n  }\n\n  get email(){\n    return this.addClientForm.get('email');\n  }\n\n  get phone(){\n    return this.addClientForm.get('phone');\n  }\n\n    onSubmit(){\n    if (!this.addClientForm.valid){\n      this.flashMessage.show('Please fill out the form correctly', {\n        cssClass: 'alert-danger', timeout: 4000\n      });\n    } else{\n      this.addClientForm.patchValue({\n        id: this.id\n      });\n      this.clientService.updateClient(this.addClientForm.value);\n      this.router.navigate(['/client/'+this.id]);\n    }\n    this.flashMessage.show('Client successfully updated', {\n      cssClass: 'alert-success', timeout: 4000\n    });\n\n    }\n\n    ngOnDestroy(){\n    this.subscription.unsubscribe();\n    }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6\">\n    <a routerLink=\"/client/{{id}}\" class=\"btn btn-link\">\n      <i class=\"fa fa-arrow-circle-o-left\"></i> Back to Client\n    </a>\n  </div>\n  <div class=\"col-md-6\">\n\n  </div>\n</div>\n\n<div class=\"card\">\n  <div class=\"card-header\">\n    Edit Client <span class=\"pull-right\">{{firstName.value}} {{lastName.value}}</span>\n  </div>\n  <div class=\"card-body\">\n    <form [formGroup]=\"addClientForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label>\n          First Name:\n        </label>\n        <input class=\"form-control\" [ngClass]=\"{'is-invalid': firstName.invalid && (firstName.touched || firstName.dirty) }\" type=\"text\" formControlName=\"firstName\" required>\n        <div *ngIf=\"firstName.invalid && (firstName.touched || firstName.dirty)\" class=\"invalid-feedback\">\n          <div *ngIf=\"firstName.errors.required\"> First Name is required</div>\n          <div *ngIf=\"firstName.errors.minlength\"> First Name should be at least 2 characters</div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label>\n          Last Name:\n        </label>\n        <input class=\"form-control\" [ngClass]=\"{'is-invalid': lastName.invalid && (lastName.touched || lastName.dirty) }\" type=\"text\" formControlName=\"lastName\" required>\n        <div *ngIf=\"lastName.invalid && (lastName.touched || lastName.dirty)\" class=\"invalid-feedback\">\n          <div *ngIf=\"lastName.errors.required\"> Last Name is required</div>\n          <div *ngIf=\"lastName.errors.minlength\"> Last Name should be at least 2 characters</div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label>\n          Email:\n        </label>\n        <input class=\"form-control\" [ngClass]=\"{'is-invalid': email.invalid && (email.touched || email.dirty) }\" type=\"text\" formControlName=\"email\" required>\n        <div *ngIf=\"email.invalid && (email.touched || email.dirty)\" class=\"invalid-feedback\">\n          <div *ngIf=\"email.errors.required\"> Email is required</div>\n          <div *ngIf=\"email.errors.email\"> Please enter a valid email </div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label>\n          Phone:\n        </label>\n        <input class=\"form-control\" [ngClass]=\"{'is-invalid': phone.invalid && (phone.touched || phone.dirty)}\" type=\"text\" formControlName=\"phone\" required>\n        <div *ngIf=\"phone.invalid && (phone.touched || phone.dirty)\" class=\"invalid-feedback\">\n          <div *ngIf=\"phone.errors.required\"> Phone is required</div>\n          <div *ngIf=\"phone.errors.minlength\"> Please enter a valid phone </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label>\n          Balance:\n        </label>\n        <input class=\"form-control\" type=\"number\" formControlName=\"balance\" >\n      </div>\n      <input type=\"submit\" class=\"btn btn-primary btn-block\">\n    </form>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  password: string;\n  email: string;\n\n  constructor(private authService: AuthService,\n              private flashMessages: FlashMessagesService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.authService.getAuth().subscribe(auth => {\n      if(auth){\n        this.router.navigate(['/']);\n      }\n    })\n  }\n\n  onSubmit(){\n  this.authService.login(this.email, this.password)\n    .then(res => {\n      this.flashMessages.show('You are now logged in', {\n        cssClass: 'alert-success', timeout: 4000\n      });\n      this.router.navigate(['/']);\n    })\n    .catch(err => {\n      this.flashMessages.show(err.message, {\n        cssClass: 'alert-danger', timeout: 4000\n      });\n    });\n\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 mx-auto\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h1 class=\"text-center pb-4 pt-3\">\n          <span class=\"text-primary\"><i class=\"fa fa-lock\"></i> Client Panel </span>Login\n        </h1>\n        <form (submit)=\"onSubmit()\">\n          <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input  class=\"form-control\" type=\"email\" name=\"email\" [(ngModel)]=\"email\" required>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input class=\"form-control\" type=\"password\" name=\"password\" [(ngModel)]=\"password\" required>\n          </div>\n          <input type=\"submit\" value=\"Login\" class=\"btn btn-primary btn-block\">\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport { Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {AuthService} from '../../services/auth.service';\nimport {SettingsService} from '../../services/settings.service';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit, OnDestroy {\n  isLoggedIn: boolean;\n  loggedInUser: string;\n  showRegister: boolean;\n  subscription = new Subscription();\n\n  constructor(private authService: AuthService,\n              private router: Router,\n              private flashMessage: FlashMessagesService,\n              private settingsService: SettingsService) { }\n\n  ngOnInit(): void {\n    this.authService.getAuth().subscribe(auth => {\n      if (auth) {\n        this.isLoggedIn = true;\n        this.loggedInUser = auth.email;\n        } else {\n        this.isLoggedIn = false;\n      }\n    });\n\n    this.subscription = this.settingsService.settings.subscribe(res => this.showRegister = res.allowRegistration);\n\n  }\n\n  onLogout(){\n    this.authService.logout();\n    this.isLoggedIn = false;\n    this.flashMessage.show('You are now logged out', {\n      cssClass: 'alert-success', timeout: 4000\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary mb-4\">\n  <div class=\"container\">\n    <a routerLink=\"/\" class=\"navbar-brand\">ClientPanel</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarMain\" >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarMain\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\">\n          <a routerLink=\"/\" class=\"nav-link\">Dashboard</a>\n        </li>\n      </ul>\n\n      <ul class=\"navbar-nav mr-auto\">\n        <li *ngIf=\"!isLoggedIn && showRegister\" class=\"nav-item\">\n          <a routerLink=\"/register\" class=\"nav-link\">Register</a>\n        </li>\n        <li *ngIf=\"!isLoggedIn && showRegister\" class=\"nav-item\">\n          <a routerLink=\"/login\" class=\"nav-link\">Login</a>\n        </li>\n        <li *ngIf=\"isLoggedIn\" class=\"nav-item\">\n          <a href=\"#\" class=\"nav-link\">{{ loggedInUser }}</a>\n        </li>\n        <li *ngIf=\"isLoggedIn\" class=\"nav-item\">\n          <a routerLink=\"/settings\" class=\"nav-link\">Settings</a>\n        </li>\n        <li *ngIf=\"isLoggedIn\" class=\"nav-item\">\n          <a routerLink=\"/login\" class=\"nav-link\" (click)=\"onLogout()\">Logout</a>\n        </li>\n      </ul>\n\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  password: string;\n  email: string;\n\n  constructor(private authService: AuthService,\n              private flashMessages: FlashMessagesService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(){\n    this.authService.register(this.email, this.password)\n      .then(res => {\n        this.flashMessages.show('You are now registered', {\n          cssClass: 'alert-success', timeout: 4000\n        });\n        this.router.navigate(['/']);\n      })\n      .catch(err => {\n        this.flashMessages.show(err.message, {\n          cssClass: 'alert-danger', timeout: 4000\n        });\n      });\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 mx-auto\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h1 class=\"text-center pb-4 pt-3\">\n          <span class=\"text-primary\"><i class=\"fa fa-lock\"></i> Client Panel </span>Register\n        </h1>\n        <form (submit)=\"onSubmit()\">\n          <div class=\"form-group\">\n            <label>Email</label>\n            <input  class=\"form-control\" type=\"email\" name=\"email\" [(ngModel)]=\"email\" required>\n          </div>\n          <div class=\"form-group\">\n            <label>Password</label>\n            <input class=\"form-control\" type=\"password\" name=\"password\" [(ngModel)]=\"password\" required>\n          </div>\n          <input type=\"submit\" value=\"Register\" class=\"btn btn-primary btn-block\">\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {Settings} from \"../../models/Settings\";\nimport {SettingsService} from \"../../services/settings.service\";\nimport {Router} from \"@angular/router\";\nimport {FlashMessagesService} from \"angular2-flash-messages\";\nimport {Subscription} from \"rxjs\";\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n\n  settings;\n  subscription: Subscription;\n\n  constructor(private settingsService: SettingsService,\n              private router: Router,\n              private flashMessages: FlashMessagesService) { }\n\n  ngOnInit(): void {\n    this.subscription = this.settingsService.settings.subscribe(res => this.settings = res);\n  }\n\n  onSubmit(){\n  this.settingsService.settings.next(this.settings);\n  this.settingsService.changeSettings(this.settings);\n  this.flashMessages.show('Settings saved', {\n    cssClass: 'alert-success', timeout: 4000\n  });\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-md-6\">\n    <a routerLink=\"/\" class=\"btn btn-link\">\n      <i class=\"fa fa-arrow-circle-o-left\"></i> Back to Dashboard\n    </a>\n  </div>\n  <div class=\"col-md-6\"></div>\n  <div class=\"card\">\n    <div class=\"card-header\"> Edit Settings</div>\n    <div class=\"card-body\">\n      <form (submit)=\"onSubmit()\">\n        <div class=\"form-group\">\n          <label>Allow Registration</label>\n          <input type=\"checkbox\" name=\"allowRegistration\" [checked]=\"settings.allowRegistration\" (change)=\"settings.allowRegistration = !settings.allowRegistration\">\n        </div>\n        <div class=\"form-group\">\n          <label>Disable Balance on Add</label>\n          <input type=\"checkbox\" name=\"disableBalanceOnAdd\" [checked]=\"settings.disableBalanceOnAdd\" (change)=\"settings.disableBalanceOnAdd = !settings.disableBalanceOnAdd\">\n        </div><div class=\"form-group\">\n          <label>Disable Balance on Edit</label>\n          <input type=\"checkbox\" name=\"disableBalanceOnEdit\" [checked]=\"settings.disableBalanceOnEdit\" (change)=\"settings.disableBalanceOnEdit = !settings.disableBalanceOnEdit\">\n        </div>\n        <input class=\"btn btn-primary btn-block\" type=\"submit\" value=\"Save settings\">\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<a routerLink=\"/client/add\" class=\"btn btn-success btn-block\">\n  <i class=\"fa fa-plus\"></i> New\n</a>\n","import {Injectable} from '@angular/core';\r\nimport {CanActivate, CanActivateChild, Router} from '@angular/router';\r\nimport {AngularFireAuth} from 'angularfire2/auth';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\n\r\n  export class AuthGuard implements CanActivate {\r\n    constructor (\r\n      private router: Router,\r\n      private afAuth: AngularFireAuth\r\n    ){}\r\n\r\n    canActivate(): Observable<boolean> | Promise<boolean> | boolean  {\r\n      return this.afAuth.authState.pipe(map(auth => {\r\n        if(!auth){\r\n          this.router.navigate(['/login']);\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      }));\r\n    }\r\n  }\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {CanActivate, Router} from '@angular/router';\r\n\r\nimport {SettingsService} from '../services/settings.service';\r\n\r\n\r\n@Injectable()\r\n\r\n  export class RegisterGuard implements CanActivate {\r\n  allowRegistration: boolean;\r\n    constructor (\r\n      private router: Router,\r\n      private settingsService: SettingsService\r\n    ){}\r\n\r\n    canActivate(): boolean  {\r\n      this.settingsService.settings.subscribe(res => this.allowRegistration = res.allowRegistration);\r\n      if (this.allowRegistration){\r\n        return true;\r\n      } else {\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n","import { Injectable } from '@angular/core';\nimport {AngularFireAuth} from 'angularfire2/auth';\nimport {Observable} from 'rxjs';\nimport {map} from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private afAuth: AngularFireAuth) { }\n\n  login(email: string, password: string){\n    return new Promise((resolve, reject) => {\n      this.afAuth.auth.signInWithEmailAndPassword(email, password)\n        .then(userData => resolve(userData),\n          err => reject(err));\n    });\n\n  }\n\n  register(email: string, password: string){\n    return new Promise((resolve, reject) => {\n      this.afAuth.auth.createUserWithEmailAndPassword(email, password)\n        .then(userData => resolve(userData),\n          err => reject(err));\n    });\n\n  }\n\n  getAuth(){\n    return this.afAuth.authState.pipe(map(auth => auth));\n  }\n\n  logout(){\n    this.afAuth.auth.signOut();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument} from 'angularfire2/firestore';\nimport {Observable} from 'rxjs';\nimport {Client} from '../models/Client';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n  clientsCollection: AngularFirestoreCollection<Client>;\n  clientDoc: AngularFirestoreDocument<Client>;\n  clients: Observable<Client[]>;\n  client: Observable<Client>;\n\n  constructor(private afs: AngularFirestore) {\n    this.clientsCollection = this.afs.collection('clients', ref => ref.orderBy('lastName', 'asc'));\n  }\n\n  getClients(): Observable<Client[]>{\n    //Get clients with ID\n    this.clients = this.clientsCollection.snapshotChanges().pipe(map(changes => {\n      return changes.map(action => {\n        const data = action.payload.doc.data() as Client;\n        data.id = action.payload.doc.id;\n        return data;\n      });\n    }));\n    return this.clients;\n  }\n\n  getClient (id: string): Observable<Client>{\n    this.clientDoc = this.afs.doc<Client>(`clients/${id}`);\n    this.client = this.clientDoc.snapshotChanges().pipe(map(action => {\n      if (action.payload.exists === false){\n        return null;\n      } else {\n        const data = action.payload.data() as Client;\n        data.id = action.payload.id;\n        return data;\n      }\n    }));\n    return this.client;\n  }\n\n  newClient(client){\n  this.clientsCollection.add(client);\n  }\n\n    updateClient(client: Client){\n    this.clientDoc = this.afs.doc(`clients/${client.id}`);\n    this.clientDoc.update(client);\n    }\n\n    deleteClient(client: Client){\n    this.clientDoc = this.afs.doc(`clients/${client.id}`);\n    this.clientDoc.delete();\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Settings} from '../models/Settings';\nimport {BehaviorSubject, Observable, Subject} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n\n  settings: BehaviorSubject<Settings> = new BehaviorSubject<Settings>({\n    allowRegistration: false,\n    disableBalanceOnAdd: false,\n    disableBalanceOnEdit: false\n  });\n\n  constructor() {\n    if (localStorage.getItem('settings') != null){\n      this.settings.next(JSON.parse(localStorage.getItem('settings')));\n    };\n  }\n\n  getSettings(){\n    return this.settings;\n  }\n\n  changeSettings(settings: Settings){\n      localStorage.setItem('settings', JSON.stringify(settings));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyDhrxCO_843ItV-5374oGJnKcZijC-4OBQ\",\n    authDomain: \"cpanel-9cf92.firebaseapp.com\",\n    databaseURL: \"https://cpanel-9cf92.firebaseio.com\",\n    projectId: \"cpanel-9cf92\",\n    storageBucket: \"cpanel-9cf92.appspot.com\",\n    messagingSenderId: \"296361287197\",\n    appId: \"1:296361287197:web:94fc873df1583ecfb430f4\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}